<?xml version="1.0" encoding="utf-8" standalone="no"?><asul><style><![CDATA[togglebutton.fullscreen button box{background:image(gui/navigationbar/btn_fullscreen.png)}togglebutton.fullscreen button.toggled box{background:image(gui/navigationbar/btn_restore.png)}togglebutton.mute button box{background:image(gui/navigationbar/btn_mute.png)}togglebutton.mute button.toggled box{background:image(gui/navigationbar/btn_unmute.png)}button.zoom_in box{background:image(gui/navigationbar/btn_zoom_in.png)}button.zoom_out box{background:image(gui/navigationbar/btn_zoom_out.png)}button.first box{background:image(gui/navigationbar/btn_page_first.png)}button.last box{background:image(gui/navigationbar/btn_page_last.png)}button.prev box{background:image(gui/navigationbar/btn_page_prev.png)}button.next box{background:image(gui/navigationbar/btn_page_next.png)}button.rotate_left box{background:image(gui/navigationbar/btn_rotate_left.png)}button.rotate_right box{background:image(gui/navigationbar/btn_rotate_right.png)}button.scroll_handle box{background:image(gui/zoom/btn_scroll_handle.png);width:15;height:15}button.scroll_handle box.over{background:image(gui/zoom/btn_scroll_handle1.png)}togglebutton.page button box{background:image(gui/navigationbar/btn_page_small.png);x:0;y:0;width:16;height:24}togglebutton.page button box.over{background:image(gui/navigationbar/btn_page_big.png)}togglebutton.page button box.down{background:image(gui/navigationbar/btn_page_big.png);x:1;y:1}togglebutton.page button.toggled box{background:image(gui/navigationbar/btn_page_big.png);x:0;y:0;filter:none}togglebutton.page{width:16}togglebutton.mute button{title:localize(LNG_MUTE, Mute)}togglebutton.mute button.toggled{title:localize(LNG_UNMUTE, Unmute)}togglebutton.fullscreen button{title:localize(LNG_FULLSCREEN, Activate fullscreen mode)}togglebutton.fullscreen button.toggled{title:localize(LNG_RESTORE, Exit fullscreen mode)}text.big{anchors:0,0,pw,ph;filter:dropshadow(2,45,0x000000,1,3,3,0.5,2);size:15;align:center;color:0xFFFFFF;font:Verdana;bold:true}button.flag{height:14;width:16}button.flag box{width:14;height:12;x:1;y:1}button.flag box.over,button.flag box.down{filter:glow(0xFFFFFF,1,3,3,2,2,true)}button.flag box.down{x:2;y:2}]]></style><script>
	<![CDATA[
	import de.mightypirates.asul.events.ToggleButtonEvent;
	import de.mightypirates.megazine.events.MuteEvent;
	import de.mightypirates.megazine.events.PageEvent;
	import de.mightypirates.megazine.events.PageChangeEvent;
	import flash.display.StageDisplayState;
	import flash.events.Event;
	import flash.events.FullScreenEvent;
	
	// Functionality for the mute button.
	var mutebutton;
	// When added to stage, add listeners to update button state or
	// react to button toggles.
	function muteadded(btn) {
		mutebutton = btn;
		mutebutton.isToggled = megazine.isMuted;
		addListener(mutebutton, ToggleButtonEvent.TOGGLED, mutetoggled);
		addListener(megazine, MuteEvent.MUTE, mutechanged);
		addListener(megazine, MuteEvent.UNMUTE, mutechanged);
	}
	// Clean up when removed, to avoid memory leaks.
	function muteremoved() {
		removeListener(mutebutton, ToggleButtonEvent.TOGGLED, mutetoggled);
		removeListener(megazine, MuteEvent.MUTE, mutechanged);
		removeListener(megazine, MuteEvent.UNMUTE, mutechanged);
	}
	// Button was toggled, update engine muted state.
	function mutetoggled() {
		megazine.isMuted = mutebutton.isToggled;
	}
	// Engine muted state was changed, update button toggle state.
	function mutechanged() {
		mutebutton.isToggled = megazine.isMuted;
	}
	
	// Input box, hide in fullscreen mode (because we can't input data anyway).
	var gotobox;
	function gotoadded(box) {
		gotobox = box;
	}
	
	// Functionality for the fullscreen button.
	var fullscreenbutton;
	function inFullscreen() {
		return fullscreenbutton.stage.displayState == StageDisplayState.FULL_SCREEN;
	}
	// When added to stage, add listeners to update button state or
	// react to button toggles.
	function fullscreenadded(btn) {
		fullscreenbutton = btn;
		fullscreenbutton.isToggled = inFullscreen();
		addListener(fullscreenbutton, ToggleButtonEvent.TOGGLED, fullscreentoggled);
		addListener(fullscreenbutton.stage, FullScreenEvent.FULL_SCREEN, fullscreenchanged);
	}
	// Clean up when removed, to avoid memory leaks.
	function fullscreenremoved() {
		removeListener(fullscreenbutton, ToggleButtonEvent.TOGGLED, fullscreentoggled);
		removeListener(fullscreenbutton.stage, FullScreenEvent.FULL_SCREEN, fullscreenchanged);
	}
	// Button was toggled, update fullscreen state.
	function fullscreentoggled() {
		fullscreenbutton.stage.displayState = fullscreenbutton.isToggled ? StageDisplayState.FULL_SCREEN : StageDisplayState.NORMAL;
		fullscreenbutton.isToggled = inFullscreen();
	}
	// Fullscreen state changed, update button toggle state.
	function fullscreenchanged() {
		fullscreenbutton.isToggled = inFullscreen();
		if (gotobox) gotobox.visible = !inFullscreen();
	}
	
	// Page navigation slider functionality.
	var pageslider;
	// Added to stage, link up events.
	function pageslideradded(slider) {
		pageslider = slider;
		pageslider.maximum = megazine.pageCount / 2;
		pageslider.value = megazine.currentPage / 2;
		addListener(pageslider, Event.CHANGE, pagesliderchanged);
		addListener(megazine, PageChangeEvent.PAGE_CHANGE_DELAYED, pagechanged);
		addListener(megazine, PageEvent.ADDED, pagecountchanged);
		addListener(megazine, PageEvent.REMOVED, pagecountchanged);
	}
	// Removed, clean up.
	function pagesliderremoved() {
		removeListener(pageslider, Event.CHANGE, pagesliderchanged);
		removeListener(megazine, PageChangeEvent.PAGE_CHANGE_DELAYED, pagechanged);
	}
	// Update slider max on page count change.
	function pagecountchanged() {
		pageslider.maximum = megazine.pageCount / 2;
	}
	// Slider was moved, navigate to page.
	function pagesliderchanged() {
		megazine.gotoPage(pageslider.intValue * 2);
	}
	// Page changed, update slider.
	function pagechanged() {
		pageslider.intValue = megazine.currentPage / 2;
	}
	]]>
	</script>
	<box anchors="0,0,pw,ph" id="navigationframe">
		<box anchors="pw/2-pagew!25,ph-25-h" height="24" style="container" width="50">
			<text name="pagenum_left" style="big"/>
		</box>
		<box anchors="pw/2+pagew-w?pw-w-25,ph-25-h" height="24" style="container" width="50">
			<text name="pagenum_right" style="big"/>
		</box>
		<hflow anchors="(pw-w)/2,ph-25-h" collapse_height="24" collapse_time="0.125" maxwidth="(pagew*2?pw-50)-150" minwidth="16" mouseenabled="true" name="page_buttons" style="container"/>
		<box anchors="(pw-w)/2,(ph-h)/2" name="thumbnail" style="container"/>
		<hflow anchors="(pw-w)/2,25" clipchildren="false" height="24" style="container">
		<!--
			<togglebutton onaddedtostage="muteadded(event.currentTarget)" onremovedfromstage="muteremoved()" style="common mute"/>
		-->
			<togglebutton onaddedtostage="fullscreenadded(event.currentTarget)" onremovedfromstage="fullscreenremoved()" style="common fullscreen"/>
			<button onclick="megazine.gotoFirstPage()" style="common first" title="localize(LNG_FIRST_PAGE, First page)"/>
			<button onclick="megazine.gotoPreviousPage()" style="common prev" title="localize(LNG_PREV_PAGE, Previous page)"/>
			<button onclick="megazine.gotoNextPage()" style="common next" title="localize(LNG_NEXT_PAGE, Next page)"/>
			<button onclick="megazine.gotoLastPage()" style="common last" title="localize(LNG_LAST_PAGE, Last page)"/>
			<button onclick="megazine.zoomOut()" title="localize(LNG_ZOOM_OUT, Zoom out)" style="common zoom_out"/>
			<button onclick="megazine.zoomIn()" title="localize(LNG_ZOOM_IN, Zoom in)" style="common zoom_in"/>
			<box height="24" onaddedtostage="gotoadded(event.currentTarget)" width="100">
				<box anchors="5,2,pw-5,ph-2" style="input">
					<text align="center" maxchars="4" name="txt_gotopage" restrict="\-0123456789/" title="localize(LNG_GOTO_DIALOG_TIP, Please enter the number of the page to jump to and press enter.)"/>
				</box>
			</box>
			<button onclick="megazine.bookRotation+=90" style="common rotate_right" title="localize(LNG_ROTATE_RIGHT, Rotate book clockwise)"/>
			<button onclick="megazine.bookRotation-=90" style="common rotate_left" title="localize(LNG_ROTATE_LEFT, Rotate book counterclockwise)"/>
			<hflow height="24" name="plugin_buttons"/>
			<box clipchildren="false" height="24" width="24">
				<vflow anchors="4,5" collapse_height="14" collapse_width="16" maxheight="42" name="langchooser" style="container"/>
			</box>
		</hflow>
	</box>
	<togglebutton id="btn_page" style="common page"/>
	<button id="btn_flag" style="flag">
		<box name="$up$"/>
		<box name="$over$" style="over"/>
		<box name="$down$" style="down"/>
	</button>
</asul>